CMAKE_MINIMUM_REQUIRED(VERSION 3.15)

PROJECT(gob)
SET(CMAKE_CXX_STANDARD 11) # 设置编译标准为C++11
SET(CMAKE_CXX_FLAGS "/EHsc ${CMAKE_CXX_FLAGS}")
SET(EXECUTABLE_OUTPUT_PATH ${CMAKE_SOURCE_DIR}/bin)
# link boost
MESSAGE(STATUS "Link Boost:")
SET(Boost_USE_MULTITHREAD ON)
SET(Boost_USE_STATIC_LIBS ON)
SET(Boost_USE_STATIC_RUNTIME OFF)

FIND_PACKAGE(Boost COMPONENTS log locale REQUIRED) # 这里填入需要的component，例如 log, thread ...

IF(Boost_FOUND)
    # MESSAGE(STATUS "Boost_INCLUDE_DIRS ${Boost_INCLUDE_DIRS}")
    # MESSAGE(STATUS "Boost_LIBRARIES ${Boost_LIBRARIES}")
    INCLUDE_DIRECTORIES(${Boost_INCLUDE_DIRS})
ENDIF()

# add link directory
LINK_DIRECTORIES(lib/glog)

# add definitions
IF(WIN32)
    ADD_DEFINITIONS(-D_WIN32_WINDOWS)
    IF (CMAKE_BUILD_TYPE STREQUAL Debug)
        LINK_LIBRARIES(glogd.lib)
    ELSE()
        LINK_LIBRARIES(glog.lib)
    ENDIF()
ENDIF()
# GOOGLE_GLOG_DLL_DECL=宏主要是为了避免与windows.h冲突, USING_GLOG表明使用GLOG而不是BOOST::LOG
ADD_DEFINITIONS(-DGOOGLE_GLOG_DLL_DECL= -DUSING_GLOG)

# include current dir
INCLUDE_DIRECTORIES(
    ..
    ./include/
)

# set object src
SET(OBJ_SRCS unit_test.cpp)

# local source files
AUX_SOURCE_DIRECTORY(. OBJ_SRC)
AUX_SOURCE_DIRECTORY(log LOG_SRCS)
AUX_SOURCE_DIRECTORY(event EVENT_SRCS)
AUX_SOURCE_DIRECTORY(include INCLUDE_SRCS)
# AUX_SOURCE_DIRECTORY(../thirdparty/Remotery/lib REM_SRCS)

# generate target
ADD_EXECUTABLE(${PROJECT_NAME} ${OBJ_SRCS} ${LOG_SRCS} ${EVENT_SRCS} ${REM_SRCS} ${INCLUDE_SRCS})
TARGET_LINK_LIBRARIES(${PROJECT_NAME} ${Boost_LIBRARIES})